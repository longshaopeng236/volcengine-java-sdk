/*
 * alb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.alb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EipForDescribeLoadBalancersOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-31T15:50:05.609740+08:00[Asia/Shanghai]")
public class EipForDescribeLoadBalancersOutput {
  @SerializedName("Bandwidth")
  private Integer bandwidth = null;

  @SerializedName("EipAddress")
  private String eipAddress = null;

  @SerializedName("EipBillingType")
  private Integer eipBillingType = null;

  @SerializedName("ISP")
  private String ISP = null;

  public EipForDescribeLoadBalancersOutput bandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public Integer getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(Integer bandwidth) {
    this.bandwidth = bandwidth;
  }

  public EipForDescribeLoadBalancersOutput eipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
    return this;
  }

   /**
   * Get eipAddress
   * @return eipAddress
  **/
  @Schema(description = "")
  public String getEipAddress() {
    return eipAddress;
  }

  public void setEipAddress(String eipAddress) {
    this.eipAddress = eipAddress;
  }

  public EipForDescribeLoadBalancersOutput eipBillingType(Integer eipBillingType) {
    this.eipBillingType = eipBillingType;
    return this;
  }

   /**
   * Get eipBillingType
   * @return eipBillingType
  **/
  @Schema(description = "")
  public Integer getEipBillingType() {
    return eipBillingType;
  }

  public void setEipBillingType(Integer eipBillingType) {
    this.eipBillingType = eipBillingType;
  }

  public EipForDescribeLoadBalancersOutput ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @Schema(description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EipForDescribeLoadBalancersOutput eipForDescribeLoadBalancersOutput = (EipForDescribeLoadBalancersOutput) o;
    return Objects.equals(this.bandwidth, eipForDescribeLoadBalancersOutput.bandwidth) &&
        Objects.equals(this.eipAddress, eipForDescribeLoadBalancersOutput.eipAddress) &&
        Objects.equals(this.eipBillingType, eipForDescribeLoadBalancersOutput.eipBillingType) &&
        Objects.equals(this.ISP, eipForDescribeLoadBalancersOutput.ISP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidth, eipAddress, eipBillingType, ISP);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EipForDescribeLoadBalancersOutput {\n");
    
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    eipAddress: ").append(toIndentedString(eipAddress)).append("\n");
    sb.append("    eipBillingType: ").append(toIndentedString(eipBillingType)).append("\n");
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
