/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput
 */


public class DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput {
  @SerializedName("BillingStatus")
  private Integer billingStatus = null;

  @SerializedName("BillingType")
  private Integer billingType = null;

  @SerializedName("DirectConnectConnectionId")
  private String directConnectConnectionId = null;

  @SerializedName("ExpiredTime")
  private String expiredTime = null;

  @SerializedName("ReclaimedTime")
  private String reclaimedTime = null;

  @SerializedName("RemainRenewTimes")
  private Integer remainRenewTimes = null;

  @SerializedName("RenewType")
  private String renewType = null;

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput billingStatus(Integer billingStatus) {
    this.billingStatus = billingStatus;
    return this;
  }

   /**
   * Get billingStatus
   * @return billingStatus
  **/
  @Schema(description = "")
  public Integer getBillingStatus() {
    return billingStatus;
  }

  public void setBillingStatus(Integer billingStatus) {
    this.billingStatus = billingStatus;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput billingType(Integer billingType) {
    this.billingType = billingType;
    return this;
  }

   /**
   * Get billingType
   * @return billingType
  **/
  @Schema(description = "")
  public Integer getBillingType() {
    return billingType;
  }

  public void setBillingType(Integer billingType) {
    this.billingType = billingType;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput directConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
    return this;
  }

   /**
   * Get directConnectConnectionId
   * @return directConnectConnectionId
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionId() {
    return directConnectConnectionId;
  }

  public void setDirectConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput expiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Get expiredTime
   * @return expiredTime
  **/
  @Schema(description = "")
  public String getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput reclaimedTime(String reclaimedTime) {
    this.reclaimedTime = reclaimedTime;
    return this;
  }

   /**
   * Get reclaimedTime
   * @return reclaimedTime
  **/
  @Schema(description = "")
  public String getReclaimedTime() {
    return reclaimedTime;
  }

  public void setReclaimedTime(String reclaimedTime) {
    this.reclaimedTime = reclaimedTime;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput remainRenewTimes(Integer remainRenewTimes) {
    this.remainRenewTimes = remainRenewTimes;
    return this;
  }

   /**
   * Get remainRenewTimes
   * @return remainRenewTimes
  **/
  @Schema(description = "")
  public Integer getRemainRenewTimes() {
    return remainRenewTimes;
  }

  public void setRemainRenewTimes(Integer remainRenewTimes) {
    this.remainRenewTimes = remainRenewTimes;
  }

  public DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput renewType(String renewType) {
    this.renewType = renewType;
    return this;
  }

   /**
   * Get renewType
   * @return renewType
  **/
  @Schema(description = "")
  public String getRenewType() {
    return renewType;
  }

  public void setRenewType(String renewType) {
    this.renewType = renewType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput directConnectConnectionForDescribeDirectConnectConnectionBillingOutput = (DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput) o;
    return Objects.equals(this.billingStatus, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.billingStatus) &&
        Objects.equals(this.billingType, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.billingType) &&
        Objects.equals(this.directConnectConnectionId, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.directConnectConnectionId) &&
        Objects.equals(this.expiredTime, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.expiredTime) &&
        Objects.equals(this.reclaimedTime, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.reclaimedTime) &&
        Objects.equals(this.remainRenewTimes, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.remainRenewTimes) &&
        Objects.equals(this.renewType, directConnectConnectionForDescribeDirectConnectConnectionBillingOutput.renewType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingStatus, billingType, directConnectConnectionId, expiredTime, reclaimedTime, remainRenewTimes, renewType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectConnectConnectionForDescribeDirectConnectConnectionBillingOutput {\n");
    
    sb.append("    billingStatus: ").append(toIndentedString(billingStatus)).append("\n");
    sb.append("    billingType: ").append(toIndentedString(billingType)).append("\n");
    sb.append("    directConnectConnectionId: ").append(toIndentedString(directConnectConnectionId)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    reclaimedTime: ").append(toIndentedString(reclaimedTime)).append("\n");
    sb.append("    remainRenewTimes: ").append(toIndentedString(remainRenewTimes)).append("\n");
    sb.append("    renewType: ").append(toIndentedString(renewType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
