/*
 * kafka
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.kafka.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InnerParametersForModifyTopicParametersInput
 */


public class InnerParametersForModifyTopicParametersInput {
  @SerializedName("LogRetentionHours")
  private Integer logRetentionHours = null;

  @SerializedName("MessageMaxByte")
  private Integer messageMaxByte = null;

  @SerializedName("MinInsyncReplicaNumber")
  private Integer minInsyncReplicaNumber = null;

  public InnerParametersForModifyTopicParametersInput logRetentionHours(Integer logRetentionHours) {
    this.logRetentionHours = logRetentionHours;
    return this;
  }

   /**
   * Get logRetentionHours
   * @return logRetentionHours
  **/
  @Schema(description = "")
  public Integer getLogRetentionHours() {
    return logRetentionHours;
  }

  public void setLogRetentionHours(Integer logRetentionHours) {
    this.logRetentionHours = logRetentionHours;
  }

  public InnerParametersForModifyTopicParametersInput messageMaxByte(Integer messageMaxByte) {
    this.messageMaxByte = messageMaxByte;
    return this;
  }

   /**
   * Get messageMaxByte
   * @return messageMaxByte
  **/
  @Schema(description = "")
  public Integer getMessageMaxByte() {
    return messageMaxByte;
  }

  public void setMessageMaxByte(Integer messageMaxByte) {
    this.messageMaxByte = messageMaxByte;
  }

  public InnerParametersForModifyTopicParametersInput minInsyncReplicaNumber(Integer minInsyncReplicaNumber) {
    this.minInsyncReplicaNumber = minInsyncReplicaNumber;
    return this;
  }

   /**
   * Get minInsyncReplicaNumber
   * @return minInsyncReplicaNumber
  **/
  @Schema(description = "")
  public Integer getMinInsyncReplicaNumber() {
    return minInsyncReplicaNumber;
  }

  public void setMinInsyncReplicaNumber(Integer minInsyncReplicaNumber) {
    this.minInsyncReplicaNumber = minInsyncReplicaNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InnerParametersForModifyTopicParametersInput innerParametersForModifyTopicParametersInput = (InnerParametersForModifyTopicParametersInput) o;
    return Objects.equals(this.logRetentionHours, innerParametersForModifyTopicParametersInput.logRetentionHours) &&
        Objects.equals(this.messageMaxByte, innerParametersForModifyTopicParametersInput.messageMaxByte) &&
        Objects.equals(this.minInsyncReplicaNumber, innerParametersForModifyTopicParametersInput.minInsyncReplicaNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logRetentionHours, messageMaxByte, minInsyncReplicaNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InnerParametersForModifyTopicParametersInput {\n");
    
    sb.append("    logRetentionHours: ").append(toIndentedString(logRetentionHours)).append("\n");
    sb.append("    messageMaxByte: ").append(toIndentedString(messageMaxByte)).append("\n");
    sb.append("    minInsyncReplicaNumber: ").append(toIndentedString(minInsyncReplicaNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
