/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vedbm.model.TagForCreateDBInstanceInput;
import com.volcengine.vedbm.model.ZoneNodeInfoForCreateDBInstanceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateDBInstanceRequest
 */


public class CreateDBInstanceRequest {
  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("CreateType")
  private String createType = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("DBTimeZone")
  private String dbTimeZone = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("LowerCaseTableNames")
  private String lowerCaseTableNames = null;

  @SerializedName("NodeNumber")
  private Integer nodeNumber = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("StoragePoolName")
  private String storagePoolName = null;

  @SerializedName("StoragePoolType")
  private String storagePoolType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("SuperAccountName")
  private String superAccountName = null;

  @SerializedName("SuperAccountPassword")
  private String superAccountPassword = null;

  @SerializedName("Tags")
  private List<TagForCreateDBInstanceInput> tags = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneIds")
  private String zoneIds = null;

  @SerializedName("ZoneNodeInfos")
  private List<ZoneNodeInfoForCreateDBInstanceInput> zoneNodeInfos = null;

  public CreateDBInstanceRequest chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public CreateDBInstanceRequest createType(String createType) {
    this.createType = createType;
    return this;
  }

   /**
   * Get createType
   * @return createType
  **/
  @Schema(description = "")
  public String getCreateType() {
    return createType;
  }

  public void setCreateType(String createType) {
    this.createType = createType;
  }

  public CreateDBInstanceRequest dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public CreateDBInstanceRequest dbTimeZone(String dbTimeZone) {
    this.dbTimeZone = dbTimeZone;
    return this;
  }

   /**
   * Get dbTimeZone
   * @return dbTimeZone
  **/
  @Schema(description = "")
  public String getDbTimeZone() {
    return dbTimeZone;
  }

  public void setDbTimeZone(String dbTimeZone) {
    this.dbTimeZone = dbTimeZone;
  }

  public CreateDBInstanceRequest instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public CreateDBInstanceRequest lowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
    return this;
  }

   /**
   * Get lowerCaseTableNames
   * @return lowerCaseTableNames
  **/
  @Schema(description = "")
  public String getLowerCaseTableNames() {
    return lowerCaseTableNames;
  }

  public void setLowerCaseTableNames(String lowerCaseTableNames) {
    this.lowerCaseTableNames = lowerCaseTableNames;
  }

  public CreateDBInstanceRequest nodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @Schema(description = "")
  public Integer getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public CreateDBInstanceRequest nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @Schema(description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public CreateDBInstanceRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateDBInstanceRequest storagePoolName(String storagePoolName) {
    this.storagePoolName = storagePoolName;
    return this;
  }

   /**
   * Get storagePoolName
   * @return storagePoolName
  **/
  @Schema(description = "")
  public String getStoragePoolName() {
    return storagePoolName;
  }

  public void setStoragePoolName(String storagePoolName) {
    this.storagePoolName = storagePoolName;
  }

  public CreateDBInstanceRequest storagePoolType(String storagePoolType) {
    this.storagePoolType = storagePoolType;
    return this;
  }

   /**
   * Get storagePoolType
   * @return storagePoolType
  **/
  @Schema(description = "")
  public String getStoragePoolType() {
    return storagePoolType;
  }

  public void setStoragePoolType(String storagePoolType) {
    this.storagePoolType = storagePoolType;
  }

  public CreateDBInstanceRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public CreateDBInstanceRequest superAccountName(String superAccountName) {
    this.superAccountName = superAccountName;
    return this;
  }

   /**
   * Get superAccountName
   * @return superAccountName
  **/
  @Schema(description = "")
  public String getSuperAccountName() {
    return superAccountName;
  }

  public void setSuperAccountName(String superAccountName) {
    this.superAccountName = superAccountName;
  }

  public CreateDBInstanceRequest superAccountPassword(String superAccountPassword) {
    this.superAccountPassword = superAccountPassword;
    return this;
  }

   /**
   * Get superAccountPassword
   * @return superAccountPassword
  **/
  @Schema(description = "")
  public String getSuperAccountPassword() {
    return superAccountPassword;
  }

  public void setSuperAccountPassword(String superAccountPassword) {
    this.superAccountPassword = superAccountPassword;
  }

  public CreateDBInstanceRequest tags(List<TagForCreateDBInstanceInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateDBInstanceRequest addTagsItem(TagForCreateDBInstanceInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateDBInstanceInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateDBInstanceInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateDBInstanceInput> tags) {
    this.tags = tags;
  }

  public CreateDBInstanceRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public CreateDBInstanceRequest zoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
    return this;
  }

   /**
   * Get zoneIds
   * @return zoneIds
  **/
  @Schema(description = "")
  public String getZoneIds() {
    return zoneIds;
  }

  public void setZoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
  }

  public CreateDBInstanceRequest zoneNodeInfos(List<ZoneNodeInfoForCreateDBInstanceInput> zoneNodeInfos) {
    this.zoneNodeInfos = zoneNodeInfos;
    return this;
  }

  public CreateDBInstanceRequest addZoneNodeInfosItem(ZoneNodeInfoForCreateDBInstanceInput zoneNodeInfosItem) {
    if (this.zoneNodeInfos == null) {
      this.zoneNodeInfos = new ArrayList<ZoneNodeInfoForCreateDBInstanceInput>();
    }
    this.zoneNodeInfos.add(zoneNodeInfosItem);
    return this;
  }

   /**
   * Get zoneNodeInfos
   * @return zoneNodeInfos
  **/
  @Valid
  @Schema(description = "")
  public List<ZoneNodeInfoForCreateDBInstanceInput> getZoneNodeInfos() {
    return zoneNodeInfos;
  }

  public void setZoneNodeInfos(List<ZoneNodeInfoForCreateDBInstanceInput> zoneNodeInfos) {
    this.zoneNodeInfos = zoneNodeInfos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDBInstanceRequest createDBInstanceRequest = (CreateDBInstanceRequest) o;
    return Objects.equals(this.chargeType, createDBInstanceRequest.chargeType) &&
        Objects.equals(this.createType, createDBInstanceRequest.createType) &&
        Objects.equals(this.dbEngineVersion, createDBInstanceRequest.dbEngineVersion) &&
        Objects.equals(this.dbTimeZone, createDBInstanceRequest.dbTimeZone) &&
        Objects.equals(this.instanceName, createDBInstanceRequest.instanceName) &&
        Objects.equals(this.lowerCaseTableNames, createDBInstanceRequest.lowerCaseTableNames) &&
        Objects.equals(this.nodeNumber, createDBInstanceRequest.nodeNumber) &&
        Objects.equals(this.nodeSpec, createDBInstanceRequest.nodeSpec) &&
        Objects.equals(this.projectName, createDBInstanceRequest.projectName) &&
        Objects.equals(this.storagePoolName, createDBInstanceRequest.storagePoolName) &&
        Objects.equals(this.storagePoolType, createDBInstanceRequest.storagePoolType) &&
        Objects.equals(this.subnetId, createDBInstanceRequest.subnetId) &&
        Objects.equals(this.superAccountName, createDBInstanceRequest.superAccountName) &&
        Objects.equals(this.superAccountPassword, createDBInstanceRequest.superAccountPassword) &&
        Objects.equals(this.tags, createDBInstanceRequest.tags) &&
        Objects.equals(this.vpcId, createDBInstanceRequest.vpcId) &&
        Objects.equals(this.zoneIds, createDBInstanceRequest.zoneIds) &&
        Objects.equals(this.zoneNodeInfos, createDBInstanceRequest.zoneNodeInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeType, createType, dbEngineVersion, dbTimeZone, instanceName, lowerCaseTableNames, nodeNumber, nodeSpec, projectName, storagePoolName, storagePoolType, subnetId, superAccountName, superAccountPassword, tags, vpcId, zoneIds, zoneNodeInfos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDBInstanceRequest {\n");
    
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    createType: ").append(toIndentedString(createType)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    dbTimeZone: ").append(toIndentedString(dbTimeZone)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    lowerCaseTableNames: ").append(toIndentedString(lowerCaseTableNames)).append("\n");
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    storagePoolName: ").append(toIndentedString(storagePoolName)).append("\n");
    sb.append("    storagePoolType: ").append(toIndentedString(storagePoolType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    superAccountName: ").append(toIndentedString(superAccountName)).append("\n");
    sb.append("    superAccountPassword: ").append(toIndentedString(superAccountPassword)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneIds: ").append(toIndentedString(zoneIds)).append("\n");
    sb.append("    zoneNodeInfos: ").append(toIndentedString(zoneNodeInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
