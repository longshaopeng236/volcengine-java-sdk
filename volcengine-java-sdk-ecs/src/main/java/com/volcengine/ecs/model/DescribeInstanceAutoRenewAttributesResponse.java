/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ecs.model.InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeInstanceAutoRenewAttributesResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-24T15:52:32.918937+08:00[Asia/Shanghai]")
public class DescribeInstanceAutoRenewAttributesResponse {
  @SerializedName("InstanceRenewAttributes")
  private List<InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput> instanceRenewAttributes = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  public DescribeInstanceAutoRenewAttributesResponse instanceRenewAttributes(List<InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput> instanceRenewAttributes) {
    this.instanceRenewAttributes = instanceRenewAttributes;
    return this;
  }

  public DescribeInstanceAutoRenewAttributesResponse addInstanceRenewAttributesItem(InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput instanceRenewAttributesItem) {
    if (this.instanceRenewAttributes == null) {
      this.instanceRenewAttributes = new ArrayList<InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput>();
    }
    this.instanceRenewAttributes.add(instanceRenewAttributesItem);
    return this;
  }

   /**
   * Get instanceRenewAttributes
   * @return instanceRenewAttributes
  **/
  @Valid
  @Schema(description = "")
  public List<InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput> getInstanceRenewAttributes() {
    return instanceRenewAttributes;
  }

  public void setInstanceRenewAttributes(List<InstanceRenewAttributeForDescribeInstanceAutoRenewAttributesOutput> instanceRenewAttributes) {
    this.instanceRenewAttributes = instanceRenewAttributes;
  }

  public DescribeInstanceAutoRenewAttributesResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeInstanceAutoRenewAttributesResponse describeInstanceAutoRenewAttributesResponse = (DescribeInstanceAutoRenewAttributesResponse) o;
    return Objects.equals(this.instanceRenewAttributes, describeInstanceAutoRenewAttributesResponse.instanceRenewAttributes) &&
        Objects.equals(this.nextToken, describeInstanceAutoRenewAttributesResponse.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceRenewAttributes, nextToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeInstanceAutoRenewAttributesResponse {\n");
    
    sb.append("    instanceRenewAttributes: ").append(toIndentedString(instanceRenewAttributes)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
