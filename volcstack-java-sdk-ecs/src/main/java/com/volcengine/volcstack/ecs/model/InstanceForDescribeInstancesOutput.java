/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volcstack.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.volcstack.ecs.model.NetworkInterfaceForDescribeInstancesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceForDescribeInstancesOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-04-07T19:27:18.461509+08:00[Asia/Shanghai]")
public class InstanceForDescribeInstancesOutput {
  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("HostName")
  private String hostName = null;

  @SerializedName("ImageId")
  private String imageId = null;

  @SerializedName("InstanceChargeType")
  private String instanceChargeType = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceTypeId")
  private String instanceTypeId = null;

  @SerializedName("KeyPairId")
  private String keyPairId = null;

  @SerializedName("KeyPairName")
  private String keyPairName = null;

  @SerializedName("NetworkInterfaces")
  private List<NetworkInterfaceForDescribeInstancesOutput> networkInterfaces = null;

  @SerializedName("RdmaIpAddresses")
  private List<String> rdmaIpAddresses = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StoppedMode")
  private String stoppedMode = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("UserData")
  private String userData = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public InstanceForDescribeInstancesOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public InstanceForDescribeInstancesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InstanceForDescribeInstancesOutput hostName(String hostName) {
    this.hostName = hostName;
    return this;
  }

   /**
   * Get hostName
   * @return hostName
  **/
  @Schema(description = "")
  public String getHostName() {
    return hostName;
  }

  public void setHostName(String hostName) {
    this.hostName = hostName;
  }

  public InstanceForDescribeInstancesOutput imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @Schema(description = "")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public InstanceForDescribeInstancesOutput instanceChargeType(String instanceChargeType) {
    this.instanceChargeType = instanceChargeType;
    return this;
  }

   /**
   * Get instanceChargeType
   * @return instanceChargeType
  **/
  @Schema(description = "")
  public String getInstanceChargeType() {
    return instanceChargeType;
  }

  public void setInstanceChargeType(String instanceChargeType) {
    this.instanceChargeType = instanceChargeType;
  }

  public InstanceForDescribeInstancesOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public InstanceForDescribeInstancesOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public InstanceForDescribeInstancesOutput instanceTypeId(String instanceTypeId) {
    this.instanceTypeId = instanceTypeId;
    return this;
  }

   /**
   * Get instanceTypeId
   * @return instanceTypeId
  **/
  @Schema(description = "")
  public String getInstanceTypeId() {
    return instanceTypeId;
  }

  public void setInstanceTypeId(String instanceTypeId) {
    this.instanceTypeId = instanceTypeId;
  }

  public InstanceForDescribeInstancesOutput keyPairId(String keyPairId) {
    this.keyPairId = keyPairId;
    return this;
  }

   /**
   * Get keyPairId
   * @return keyPairId
  **/
  @Schema(description = "")
  public String getKeyPairId() {
    return keyPairId;
  }

  public void setKeyPairId(String keyPairId) {
    this.keyPairId = keyPairId;
  }

  public InstanceForDescribeInstancesOutput keyPairName(String keyPairName) {
    this.keyPairName = keyPairName;
    return this;
  }

   /**
   * Get keyPairName
   * @return keyPairName
  **/
  @Schema(description = "")
  public String getKeyPairName() {
    return keyPairName;
  }

  public void setKeyPairName(String keyPairName) {
    this.keyPairName = keyPairName;
  }

  public InstanceForDescribeInstancesOutput networkInterfaces(List<NetworkInterfaceForDescribeInstancesOutput> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  public InstanceForDescribeInstancesOutput addNetworkInterfacesItem(NetworkInterfaceForDescribeInstancesOutput networkInterfacesItem) {
    if (this.networkInterfaces == null) {
      this.networkInterfaces = new ArrayList<NetworkInterfaceForDescribeInstancesOutput>();
    }
    this.networkInterfaces.add(networkInterfacesItem);
    return this;
  }

   /**
   * Get networkInterfaces
   * @return networkInterfaces
  **/
  @Valid
  @Schema(description = "")
  public List<NetworkInterfaceForDescribeInstancesOutput> getNetworkInterfaces() {
    return networkInterfaces;
  }

  public void setNetworkInterfaces(List<NetworkInterfaceForDescribeInstancesOutput> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
  }

  public InstanceForDescribeInstancesOutput rdmaIpAddresses(List<String> rdmaIpAddresses) {
    this.rdmaIpAddresses = rdmaIpAddresses;
    return this;
  }

  public InstanceForDescribeInstancesOutput addRdmaIpAddressesItem(String rdmaIpAddressesItem) {
    if (this.rdmaIpAddresses == null) {
      this.rdmaIpAddresses = new ArrayList<String>();
    }
    this.rdmaIpAddresses.add(rdmaIpAddressesItem);
    return this;
  }

   /**
   * Get rdmaIpAddresses
   * @return rdmaIpAddresses
  **/
  @Schema(description = "")
  public List<String> getRdmaIpAddresses() {
    return rdmaIpAddresses;
  }

  public void setRdmaIpAddresses(List<String> rdmaIpAddresses) {
    this.rdmaIpAddresses = rdmaIpAddresses;
  }

  public InstanceForDescribeInstancesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public InstanceForDescribeInstancesOutput stoppedMode(String stoppedMode) {
    this.stoppedMode = stoppedMode;
    return this;
  }

   /**
   * Get stoppedMode
   * @return stoppedMode
  **/
  @Schema(description = "")
  public String getStoppedMode() {
    return stoppedMode;
  }

  public void setStoppedMode(String stoppedMode) {
    this.stoppedMode = stoppedMode;
  }

  public InstanceForDescribeInstancesOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public InstanceForDescribeInstancesOutput userData(String userData) {
    this.userData = userData;
    return this;
  }

   /**
   * Get userData
   * @return userData
  **/
  @Schema(description = "")
  public String getUserData() {
    return userData;
  }

  public void setUserData(String userData) {
    this.userData = userData;
  }

  public InstanceForDescribeInstancesOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public InstanceForDescribeInstancesOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceForDescribeInstancesOutput instanceForDescribeInstancesOutput = (InstanceForDescribeInstancesOutput) o;
    return Objects.equals(this.createdAt, instanceForDescribeInstancesOutput.createdAt) &&
        Objects.equals(this.description, instanceForDescribeInstancesOutput.description) &&
        Objects.equals(this.hostName, instanceForDescribeInstancesOutput.hostName) &&
        Objects.equals(this.imageId, instanceForDescribeInstancesOutput.imageId) &&
        Objects.equals(this.instanceChargeType, instanceForDescribeInstancesOutput.instanceChargeType) &&
        Objects.equals(this.instanceId, instanceForDescribeInstancesOutput.instanceId) &&
        Objects.equals(this.instanceName, instanceForDescribeInstancesOutput.instanceName) &&
        Objects.equals(this.instanceTypeId, instanceForDescribeInstancesOutput.instanceTypeId) &&
        Objects.equals(this.keyPairId, instanceForDescribeInstancesOutput.keyPairId) &&
        Objects.equals(this.keyPairName, instanceForDescribeInstancesOutput.keyPairName) &&
        Objects.equals(this.networkInterfaces, instanceForDescribeInstancesOutput.networkInterfaces) &&
        Objects.equals(this.rdmaIpAddresses, instanceForDescribeInstancesOutput.rdmaIpAddresses) &&
        Objects.equals(this.status, instanceForDescribeInstancesOutput.status) &&
        Objects.equals(this.stoppedMode, instanceForDescribeInstancesOutput.stoppedMode) &&
        Objects.equals(this.updatedAt, instanceForDescribeInstancesOutput.updatedAt) &&
        Objects.equals(this.userData, instanceForDescribeInstancesOutput.userData) &&
        Objects.equals(this.vpcId, instanceForDescribeInstancesOutput.vpcId) &&
        Objects.equals(this.zoneId, instanceForDescribeInstancesOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, description, hostName, imageId, instanceChargeType, instanceId, instanceName, instanceTypeId, keyPairId, keyPairName, networkInterfaces, rdmaIpAddresses, status, stoppedMode, updatedAt, userData, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceForDescribeInstancesOutput {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hostName: ").append(toIndentedString(hostName)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    instanceChargeType: ").append(toIndentedString(instanceChargeType)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceTypeId: ").append(toIndentedString(instanceTypeId)).append("\n");
    sb.append("    keyPairId: ").append(toIndentedString(keyPairId)).append("\n");
    sb.append("    keyPairName: ").append(toIndentedString(keyPairName)).append("\n");
    sb.append("    networkInterfaces: ").append(toIndentedString(networkInterfaces)).append("\n");
    sb.append("    rdmaIpAddresses: ").append(toIndentedString(rdmaIpAddresses)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stoppedMode: ").append(toIndentedString(stoppedMode)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
