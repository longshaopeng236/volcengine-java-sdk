/*
 * rds_mysql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForListDatabasesOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-19T10:12:05.954803+08:00[Asia/Shanghai]")
public class DataForListDatabasesOutput {
  @SerializedName("AccountNames")
  private String accountNames = null;

  @SerializedName("CharacterSetName")
  private String characterSetName = null;

  @SerializedName("DBName")
  private String dbName = null;

  /**
   * Gets or Sets dbStatus
   */
  @JsonAdapter(DbStatusEnum.Adapter.class)
  public enum DbStatusEnum {
    RUNNING("Running");

    private String value;

    DbStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DbStatusEnum fromValue(String input) {
      for (DbStatusEnum b : DbStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DbStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DbStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DbStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DbStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DBStatus")
  private DbStatusEnum dbStatus = null;

  public DataForListDatabasesOutput accountNames(String accountNames) {
    this.accountNames = accountNames;
    return this;
  }

   /**
   * Get accountNames
   * @return accountNames
  **/
  @Schema(description = "")
  public String getAccountNames() {
    return accountNames;
  }

  public void setAccountNames(String accountNames) {
    this.accountNames = accountNames;
  }

  public DataForListDatabasesOutput characterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
    return this;
  }

   /**
   * Get characterSetName
   * @return characterSetName
  **/
  @Schema(description = "")
  public String getCharacterSetName() {
    return characterSetName;
  }

  public void setCharacterSetName(String characterSetName) {
    this.characterSetName = characterSetName;
  }

  public DataForListDatabasesOutput dbName(String dbName) {
    this.dbName = dbName;
    return this;
  }

   /**
   * Get dbName
   * @return dbName
  **/
  @Schema(description = "")
  public String getDbName() {
    return dbName;
  }

  public void setDbName(String dbName) {
    this.dbName = dbName;
  }

  public DataForListDatabasesOutput dbStatus(DbStatusEnum dbStatus) {
    this.dbStatus = dbStatus;
    return this;
  }

   /**
   * Get dbStatus
   * @return dbStatus
  **/
  @Schema(description = "")
  public DbStatusEnum getDbStatus() {
    return dbStatus;
  }

  public void setDbStatus(DbStatusEnum dbStatus) {
    this.dbStatus = dbStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForListDatabasesOutput dataForListDatabasesOutput = (DataForListDatabasesOutput) o;
    return Objects.equals(this.accountNames, dataForListDatabasesOutput.accountNames) &&
        Objects.equals(this.characterSetName, dataForListDatabasesOutput.characterSetName) &&
        Objects.equals(this.dbName, dataForListDatabasesOutput.dbName) &&
        Objects.equals(this.dbStatus, dataForListDatabasesOutput.dbStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNames, characterSetName, dbName, dbStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForListDatabasesOutput {\n");
    
    sb.append("    accountNames: ").append(toIndentedString(accountNames)).append("\n");
    sb.append("    characterSetName: ").append(toIndentedString(characterSetName)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbStatus: ").append(toIndentedString(dbStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
