/*
 * rds_mysql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceSpecForModifyDBInstanceInput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-19T10:12:05.954803+08:00[Asia/Shanghai]")
public class InstanceSpecForModifyDBInstanceInput {
  @SerializedName("CpuNum")
  private Double cpuNum = null;

  /**
   * Gets or Sets instanceFamily
   */
  @JsonAdapter(InstanceFamilyEnum.Adapter.class)
  public enum InstanceFamilyEnum {
    EXCLUSIVE("Exclusive"),
    EXCLUSIVEHOST("ExclusiveHost"),
    GENERAL("General");

    private String value;

    InstanceFamilyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InstanceFamilyEnum fromValue(String input) {
      for (InstanceFamilyEnum b : InstanceFamilyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InstanceFamilyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstanceFamilyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InstanceFamilyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InstanceFamilyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("InstanceFamily")
  private InstanceFamilyEnum instanceFamily = null;

  @SerializedName("MemInGb")
  private Double memInGb = null;

  @SerializedName("SpecName")
  private String specName = null;

  public InstanceSpecForModifyDBInstanceInput cpuNum(Double cpuNum) {
    this.cpuNum = cpuNum;
    return this;
  }

   /**
   * Get cpuNum
   * @return cpuNum
  **/
  @Schema(description = "")
  public Double getCpuNum() {
    return cpuNum;
  }

  public void setCpuNum(Double cpuNum) {
    this.cpuNum = cpuNum;
  }

  public InstanceSpecForModifyDBInstanceInput instanceFamily(InstanceFamilyEnum instanceFamily) {
    this.instanceFamily = instanceFamily;
    return this;
  }

   /**
   * Get instanceFamily
   * @return instanceFamily
  **/
  @Schema(description = "")
  public InstanceFamilyEnum getInstanceFamily() {
    return instanceFamily;
  }

  public void setInstanceFamily(InstanceFamilyEnum instanceFamily) {
    this.instanceFamily = instanceFamily;
  }

  public InstanceSpecForModifyDBInstanceInput memInGb(Double memInGb) {
    this.memInGb = memInGb;
    return this;
  }

   /**
   * Get memInGb
   * @return memInGb
  **/
  @Schema(description = "")
  public Double getMemInGb() {
    return memInGb;
  }

  public void setMemInGb(Double memInGb) {
    this.memInGb = memInGb;
  }

  public InstanceSpecForModifyDBInstanceInput specName(String specName) {
    this.specName = specName;
    return this;
  }

   /**
   * Get specName
   * @return specName
  **/
  @Schema(description = "")
  public String getSpecName() {
    return specName;
  }

  public void setSpecName(String specName) {
    this.specName = specName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceSpecForModifyDBInstanceInput instanceSpecForModifyDBInstanceInput = (InstanceSpecForModifyDBInstanceInput) o;
    return Objects.equals(this.cpuNum, instanceSpecForModifyDBInstanceInput.cpuNum) &&
        Objects.equals(this.instanceFamily, instanceSpecForModifyDBInstanceInput.instanceFamily) &&
        Objects.equals(this.memInGb, instanceSpecForModifyDBInstanceInput.memInGb) &&
        Objects.equals(this.specName, instanceSpecForModifyDBInstanceInput.specName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuNum, instanceFamily, memInGb, specName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceSpecForModifyDBInstanceInput {\n");
    
    sb.append("    cpuNum: ").append(toIndentedString(cpuNum)).append("\n");
    sb.append("    instanceFamily: ").append(toIndentedString(instanceFamily)).append("\n");
    sb.append("    memInGb: ").append(toIndentedString(memInGb)).append("\n");
    sb.append("    specName: ").append(toIndentedString(specName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
