/*
 * rds_mysql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListDBInstancesRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-15T17:10:46.453185+08:00[Asia/Shanghai]")
public class ListDBInstancesRequest {
  @SerializedName("CreateEndTime")
  private String createEndTime = null;

  @SerializedName("CreateStartTime")
  private String createStartTime = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  /**
   * Gets or Sets instanceStatus
   */
  @JsonAdapter(InstanceStatusEnum.Adapter.class)
  public enum InstanceStatusEnum {
    ALLOWLISTMAINTAINING("AllowListMaintaining"),
    CLOSED("Closed"),
    CLOSING("Closing"),
    CREATEFAILED("CreateFailed"),
    CREATING("Creating"),
    DELETING("Deleting"),
    DESTROYED("Destroyed"),
    DESTROYING("Destroying"),
    ERROR("Error"),
    IMPORTING("Importing"),
    MAINTAINING("Maintaining"),
    MASTERCHANGING("MasterChanging"),
    MIGRATING("Migrating"),
    RECLAIMING("Reclaiming"),
    RECYCLED("Recycled"),
    RELEASED("Released"),
    RESTARTING("Restarting"),
    RESTORING("Restoring"),
    RESUMING("Resuming"),
    RUNNING("Running"),
    SSLUPDATING("SSLUpdating"),
    TDEUPDATING("TDEUpdating"),
    UNKNOWN("Unknown"),
    UPDATING("Updating"),
    UPGRADING("Upgrading"),
    WAITINGPAID("WaitingPaid");

    private String value;

    InstanceStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InstanceStatusEnum fromValue(String input) {
      for (InstanceStatusEnum b : InstanceStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InstanceStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstanceStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InstanceStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InstanceStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("InstanceStatus")
  private InstanceStatusEnum instanceStatus = null;

  /**
   * Gets or Sets instanceType
   */
  @JsonAdapter(InstanceTypeEnum.Adapter.class)
  public enum InstanceTypeEnum {
    BASIC("Basic"),
    CLUSTER("Cluster"),
    FINANCE("Finance"),
    HA("HA");

    private String value;

    InstanceTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InstanceTypeEnum fromValue(String input) {
      for (InstanceTypeEnum b : InstanceTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InstanceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstanceTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InstanceTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return InstanceTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("InstanceType")
  private InstanceTypeEnum instanceType = null;

  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("Zone")
  private String zone = null;

  public ListDBInstancesRequest createEndTime(String createEndTime) {
    this.createEndTime = createEndTime;
    return this;
  }

   /**
   * Get createEndTime
   * @return createEndTime
  **/
  @Schema(description = "")
  public String getCreateEndTime() {
    return createEndTime;
  }

  public void setCreateEndTime(String createEndTime) {
    this.createEndTime = createEndTime;
  }

  public ListDBInstancesRequest createStartTime(String createStartTime) {
    this.createStartTime = createStartTime;
    return this;
  }

   /**
   * Get createStartTime
   * @return createStartTime
  **/
  @Schema(description = "")
  public String getCreateStartTime() {
    return createStartTime;
  }

  public void setCreateStartTime(String createStartTime) {
    this.createStartTime = createStartTime;
  }

  public ListDBInstancesRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public ListDBInstancesRequest instanceStatus(InstanceStatusEnum instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public InstanceStatusEnum getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(InstanceStatusEnum instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public ListDBInstancesRequest instanceType(InstanceTypeEnum instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public InstanceTypeEnum getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(InstanceTypeEnum instanceType) {
    this.instanceType = instanceType;
  }

  public ListDBInstancesRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ListDBInstancesRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ListDBInstancesRequest region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ListDBInstancesRequest zone(String zone) {
    this.zone = zone;
    return this;
  }

   /**
   * Get zone
   * @return zone
  **/
  @Schema(description = "")
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListDBInstancesRequest listDBInstancesRequest = (ListDBInstancesRequest) o;
    return Objects.equals(this.createEndTime, listDBInstancesRequest.createEndTime) &&
        Objects.equals(this.createStartTime, listDBInstancesRequest.createStartTime) &&
        Objects.equals(this.instanceId, listDBInstancesRequest.instanceId) &&
        Objects.equals(this.instanceStatus, listDBInstancesRequest.instanceStatus) &&
        Objects.equals(this.instanceType, listDBInstancesRequest.instanceType) &&
        Objects.equals(this.limit, listDBInstancesRequest.limit) &&
        Objects.equals(this.offset, listDBInstancesRequest.offset) &&
        Objects.equals(this.region, listDBInstancesRequest.region) &&
        Objects.equals(this.zone, listDBInstancesRequest.zone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createEndTime, createStartTime, instanceId, instanceStatus, instanceType, limit, offset, region, zone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListDBInstancesRequest {\n");
    
    sb.append("    createEndTime: ").append(toIndentedString(createEndTime)).append("\n");
    sb.append("    createStartTime: ").append(toIndentedString(createStartTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
