/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volcstack.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDirectConnectGatewayAssociationsRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-24T18:20:58.026076+08:00[Asia/Shanghai]")
public class DescribeDirectConnectGatewayAssociationsRequest {
  @SerializedName("DirectConnectConnectionId")
  private String directConnectConnectionId = null;

  @SerializedName("DirectConnectConnectionName")
  private String directConnectConnectionName = null;

  @SerializedName("DirectConnectGatewayAssociationIds")
  private List<String> directConnectGatewayAssociationIds = null;

  @SerializedName("DirectConnectGatewayId")
  private String directConnectGatewayId = null;

  @SerializedName("DirectConnectGatewayName")
  private String directConnectGatewayName = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("VlanId")
  private Integer vlanId = null;

  public DescribeDirectConnectGatewayAssociationsRequest directConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
    return this;
  }

   /**
   * Get directConnectConnectionId
   * @return directConnectConnectionId
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionId() {
    return directConnectConnectionId;
  }

  public void setDirectConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
  }

  public DescribeDirectConnectGatewayAssociationsRequest directConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
    return this;
  }

   /**
   * Get directConnectConnectionName
   * @return directConnectConnectionName
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionName() {
    return directConnectConnectionName;
  }

  public void setDirectConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
  }

  public DescribeDirectConnectGatewayAssociationsRequest directConnectGatewayAssociationIds(List<String> directConnectGatewayAssociationIds) {
    this.directConnectGatewayAssociationIds = directConnectGatewayAssociationIds;
    return this;
  }

  public DescribeDirectConnectGatewayAssociationsRequest addDirectConnectGatewayAssociationIdsItem(String directConnectGatewayAssociationIdsItem) {
    if (this.directConnectGatewayAssociationIds == null) {
      this.directConnectGatewayAssociationIds = new ArrayList<String>();
    }
    this.directConnectGatewayAssociationIds.add(directConnectGatewayAssociationIdsItem);
    return this;
  }

   /**
   * Get directConnectGatewayAssociationIds
   * @return directConnectGatewayAssociationIds
  **/
  @Schema(description = "")
  public List<String> getDirectConnectGatewayAssociationIds() {
    return directConnectGatewayAssociationIds;
  }

  public void setDirectConnectGatewayAssociationIds(List<String> directConnectGatewayAssociationIds) {
    this.directConnectGatewayAssociationIds = directConnectGatewayAssociationIds;
  }

  public DescribeDirectConnectGatewayAssociationsRequest directConnectGatewayId(String directConnectGatewayId) {
    this.directConnectGatewayId = directConnectGatewayId;
    return this;
  }

   /**
   * Get directConnectGatewayId
   * @return directConnectGatewayId
  **/
  @Schema(description = "")
  public String getDirectConnectGatewayId() {
    return directConnectGatewayId;
  }

  public void setDirectConnectGatewayId(String directConnectGatewayId) {
    this.directConnectGatewayId = directConnectGatewayId;
  }

  public DescribeDirectConnectGatewayAssociationsRequest directConnectGatewayName(String directConnectGatewayName) {
    this.directConnectGatewayName = directConnectGatewayName;
    return this;
  }

   /**
   * Get directConnectGatewayName
   * @return directConnectGatewayName
  **/
  @Schema(description = "")
  public String getDirectConnectGatewayName() {
    return directConnectGatewayName;
  }

  public void setDirectConnectGatewayName(String directConnectGatewayName) {
    this.directConnectGatewayName = directConnectGatewayName;
  }

  public DescribeDirectConnectGatewayAssociationsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeDirectConnectGatewayAssociationsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeDirectConnectGatewayAssociationsRequest vlanId(Integer vlanId) {
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @Schema(description = "")
  public Integer getVlanId() {
    return vlanId;
  }

  public void setVlanId(Integer vlanId) {
    this.vlanId = vlanId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDirectConnectGatewayAssociationsRequest describeDirectConnectGatewayAssociationsRequest = (DescribeDirectConnectGatewayAssociationsRequest) o;
    return Objects.equals(this.directConnectConnectionId, describeDirectConnectGatewayAssociationsRequest.directConnectConnectionId) &&
        Objects.equals(this.directConnectConnectionName, describeDirectConnectGatewayAssociationsRequest.directConnectConnectionName) &&
        Objects.equals(this.directConnectGatewayAssociationIds, describeDirectConnectGatewayAssociationsRequest.directConnectGatewayAssociationIds) &&
        Objects.equals(this.directConnectGatewayId, describeDirectConnectGatewayAssociationsRequest.directConnectGatewayId) &&
        Objects.equals(this.directConnectGatewayName, describeDirectConnectGatewayAssociationsRequest.directConnectGatewayName) &&
        Objects.equals(this.pageNumber, describeDirectConnectGatewayAssociationsRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeDirectConnectGatewayAssociationsRequest.pageSize) &&
        Objects.equals(this.vlanId, describeDirectConnectGatewayAssociationsRequest.vlanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directConnectConnectionId, directConnectConnectionName, directConnectGatewayAssociationIds, directConnectGatewayId, directConnectGatewayName, pageNumber, pageSize, vlanId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDirectConnectGatewayAssociationsRequest {\n");
    
    sb.append("    directConnectConnectionId: ").append(toIndentedString(directConnectConnectionId)).append("\n");
    sb.append("    directConnectConnectionName: ").append(toIndentedString(directConnectConnectionName)).append("\n");
    sb.append("    directConnectGatewayAssociationIds: ").append(toIndentedString(directConnectGatewayAssociationIds)).append("\n");
    sb.append("    directConnectGatewayId: ").append(toIndentedString(directConnectGatewayId)).append("\n");
    sb.append("    directConnectGatewayName: ").append(toIndentedString(directConnectGatewayName)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
