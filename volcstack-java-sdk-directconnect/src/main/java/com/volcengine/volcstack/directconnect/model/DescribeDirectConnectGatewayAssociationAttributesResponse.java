/*
 * directconnect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volcstack.directconnect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDirectConnectGatewayAssociationAttributesResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-24T18:20:58.026076+08:00[Asia/Shanghai]")
public class DescribeDirectConnectGatewayAssociationAttributesResponse {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("DirectConnectConnectionId")
  private String directConnectConnectionId = null;

  @SerializedName("DirectConnectConnectionName")
  private String directConnectConnectionName = null;

  @SerializedName("DirectConnectGatewayAssociationId")
  private String directConnectGatewayAssociationId = null;

  @SerializedName("DirectConnectGatewayId")
  private String directConnectGatewayId = null;

  @SerializedName("DirectConnectGatewayName")
  private String directConnectGatewayName = null;

  @SerializedName("LocalIp")
  private String localIp = null;

  @SerializedName("Mask")
  private String mask = null;

  @SerializedName("PeerIp")
  private String peerIp = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RequestId")
  private String requestId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("VlanId")
  private Integer vlanId = null;

  public DescribeDirectConnectGatewayAssociationAttributesResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse directConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
    return this;
  }

   /**
   * Get directConnectConnectionId
   * @return directConnectConnectionId
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionId() {
    return directConnectConnectionId;
  }

  public void setDirectConnectConnectionId(String directConnectConnectionId) {
    this.directConnectConnectionId = directConnectConnectionId;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse directConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
    return this;
  }

   /**
   * Get directConnectConnectionName
   * @return directConnectConnectionName
  **/
  @Schema(description = "")
  public String getDirectConnectConnectionName() {
    return directConnectConnectionName;
  }

  public void setDirectConnectConnectionName(String directConnectConnectionName) {
    this.directConnectConnectionName = directConnectConnectionName;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse directConnectGatewayAssociationId(String directConnectGatewayAssociationId) {
    this.directConnectGatewayAssociationId = directConnectGatewayAssociationId;
    return this;
  }

   /**
   * Get directConnectGatewayAssociationId
   * @return directConnectGatewayAssociationId
  **/
  @Schema(description = "")
  public String getDirectConnectGatewayAssociationId() {
    return directConnectGatewayAssociationId;
  }

  public void setDirectConnectGatewayAssociationId(String directConnectGatewayAssociationId) {
    this.directConnectGatewayAssociationId = directConnectGatewayAssociationId;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse directConnectGatewayId(String directConnectGatewayId) {
    this.directConnectGatewayId = directConnectGatewayId;
    return this;
  }

   /**
   * Get directConnectGatewayId
   * @return directConnectGatewayId
  **/
  @Schema(description = "")
  public String getDirectConnectGatewayId() {
    return directConnectGatewayId;
  }

  public void setDirectConnectGatewayId(String directConnectGatewayId) {
    this.directConnectGatewayId = directConnectGatewayId;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse directConnectGatewayName(String directConnectGatewayName) {
    this.directConnectGatewayName = directConnectGatewayName;
    return this;
  }

   /**
   * Get directConnectGatewayName
   * @return directConnectGatewayName
  **/
  @Schema(description = "")
  public String getDirectConnectGatewayName() {
    return directConnectGatewayName;
  }

  public void setDirectConnectGatewayName(String directConnectGatewayName) {
    this.directConnectGatewayName = directConnectGatewayName;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse localIp(String localIp) {
    this.localIp = localIp;
    return this;
  }

   /**
   * Get localIp
   * @return localIp
  **/
  @Schema(description = "")
  public String getLocalIp() {
    return localIp;
  }

  public void setLocalIp(String localIp) {
    this.localIp = localIp;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * Get mask
   * @return mask
  **/
  @Schema(description = "")
  public String getMask() {
    return mask;
  }

  public void setMask(String mask) {
    this.mask = mask;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse peerIp(String peerIp) {
    this.peerIp = peerIp;
    return this;
  }

   /**
   * Get peerIp
   * @return peerIp
  **/
  @Schema(description = "")
  public String getPeerIp() {
    return peerIp;
  }

  public void setPeerIp(String peerIp) {
    this.peerIp = peerIp;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Get requestId
   * @return requestId
  **/
  @Schema(description = "")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public DescribeDirectConnectGatewayAssociationAttributesResponse vlanId(Integer vlanId) {
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @Schema(description = "")
  public Integer getVlanId() {
    return vlanId;
  }

  public void setVlanId(Integer vlanId) {
    this.vlanId = vlanId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDirectConnectGatewayAssociationAttributesResponse describeDirectConnectGatewayAssociationAttributesResponse = (DescribeDirectConnectGatewayAssociationAttributesResponse) o;
    return Objects.equals(this.accountId, describeDirectConnectGatewayAssociationAttributesResponse.accountId) &&
        Objects.equals(this.createdAt, describeDirectConnectGatewayAssociationAttributesResponse.createdAt) &&
        Objects.equals(this.directConnectConnectionId, describeDirectConnectGatewayAssociationAttributesResponse.directConnectConnectionId) &&
        Objects.equals(this.directConnectConnectionName, describeDirectConnectGatewayAssociationAttributesResponse.directConnectConnectionName) &&
        Objects.equals(this.directConnectGatewayAssociationId, describeDirectConnectGatewayAssociationAttributesResponse.directConnectGatewayAssociationId) &&
        Objects.equals(this.directConnectGatewayId, describeDirectConnectGatewayAssociationAttributesResponse.directConnectGatewayId) &&
        Objects.equals(this.directConnectGatewayName, describeDirectConnectGatewayAssociationAttributesResponse.directConnectGatewayName) &&
        Objects.equals(this.localIp, describeDirectConnectGatewayAssociationAttributesResponse.localIp) &&
        Objects.equals(this.mask, describeDirectConnectGatewayAssociationAttributesResponse.mask) &&
        Objects.equals(this.peerIp, describeDirectConnectGatewayAssociationAttributesResponse.peerIp) &&
        Objects.equals(this.projectName, describeDirectConnectGatewayAssociationAttributesResponse.projectName) &&
        Objects.equals(this.requestId, describeDirectConnectGatewayAssociationAttributesResponse.requestId) &&
        Objects.equals(this.status, describeDirectConnectGatewayAssociationAttributesResponse.status) &&
        Objects.equals(this.updatedAt, describeDirectConnectGatewayAssociationAttributesResponse.updatedAt) &&
        Objects.equals(this.vlanId, describeDirectConnectGatewayAssociationAttributesResponse.vlanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, createdAt, directConnectConnectionId, directConnectConnectionName, directConnectGatewayAssociationId, directConnectGatewayId, directConnectGatewayName, localIp, mask, peerIp, projectName, requestId, status, updatedAt, vlanId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDirectConnectGatewayAssociationAttributesResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    directConnectConnectionId: ").append(toIndentedString(directConnectConnectionId)).append("\n");
    sb.append("    directConnectConnectionName: ").append(toIndentedString(directConnectConnectionName)).append("\n");
    sb.append("    directConnectGatewayAssociationId: ").append(toIndentedString(directConnectGatewayAssociationId)).append("\n");
    sb.append("    directConnectGatewayId: ").append(toIndentedString(directConnectGatewayId)).append("\n");
    sb.append("    directConnectGatewayName: ").append(toIndentedString(directConnectGatewayName)).append("\n");
    sb.append("    localIp: ").append(toIndentedString(localIp)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    peerIp: ").append(toIndentedString(peerIp)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
