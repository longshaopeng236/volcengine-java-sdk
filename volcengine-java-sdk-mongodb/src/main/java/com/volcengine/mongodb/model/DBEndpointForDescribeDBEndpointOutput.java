/*
 * mongodb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mongodb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mongodb.model.DBAddressForDescribeDBEndpointOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DBEndpointForDescribeDBEndpointOutput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-19T10:07:26.552898+08:00[Asia/Shanghai]")
public class DBEndpointForDescribeDBEndpointOutput {
  @SerializedName("DBAddresses")
  private List<DBAddressForDescribeDBEndpointOutput> dbAddresses = null;

  @SerializedName("EndpointId")
  private String endpointId = null;

  @SerializedName("EndpointStr")
  private String endpointStr = null;

  /**
   * Gets or Sets endpointType
   */
  @JsonAdapter(EndpointTypeEnum.Adapter.class)
  public enum EndpointTypeEnum {
    CONFIGSERVER("ConfigServer"),
    MONGOS("Mongos"),
    REPLICASET("ReplicaSet"),
    SHARD("Shard");

    private String value;

    EndpointTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EndpointTypeEnum fromValue(String input) {
      for (EndpointTypeEnum b : EndpointTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EndpointTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndpointTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EndpointTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EndpointTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("EndpointType")
  private EndpointTypeEnum endpointType = null;

  /**
   * Gets or Sets networkType
   */
  @JsonAdapter(NetworkTypeEnum.Adapter.class)
  public enum NetworkTypeEnum {
    INNERPLB("InnerPLB"),
    PRIVATE("Private"),
    PUBLIC("Public"),
    STORAGEINNER("StorageInner");

    private String value;

    NetworkTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NetworkTypeEnum fromValue(String input) {
      for (NetworkTypeEnum b : NetworkTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NetworkTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NetworkTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public NetworkTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NetworkTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("NetworkType")
  private NetworkTypeEnum networkType = null;

  @SerializedName("ObjectId")
  private String objectId = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  public DBEndpointForDescribeDBEndpointOutput dbAddresses(List<DBAddressForDescribeDBEndpointOutput> dbAddresses) {
    this.dbAddresses = dbAddresses;
    return this;
  }

  public DBEndpointForDescribeDBEndpointOutput addDbAddressesItem(DBAddressForDescribeDBEndpointOutput dbAddressesItem) {
    if (this.dbAddresses == null) {
      this.dbAddresses = new ArrayList<DBAddressForDescribeDBEndpointOutput>();
    }
    this.dbAddresses.add(dbAddressesItem);
    return this;
  }

   /**
   * Get dbAddresses
   * @return dbAddresses
  **/
  @Valid
  @Schema(description = "")
  public List<DBAddressForDescribeDBEndpointOutput> getDbAddresses() {
    return dbAddresses;
  }

  public void setDbAddresses(List<DBAddressForDescribeDBEndpointOutput> dbAddresses) {
    this.dbAddresses = dbAddresses;
  }

  public DBEndpointForDescribeDBEndpointOutput endpointId(String endpointId) {
    this.endpointId = endpointId;
    return this;
  }

   /**
   * Get endpointId
   * @return endpointId
  **/
  @Schema(description = "")
  public String getEndpointId() {
    return endpointId;
  }

  public void setEndpointId(String endpointId) {
    this.endpointId = endpointId;
  }

  public DBEndpointForDescribeDBEndpointOutput endpointStr(String endpointStr) {
    this.endpointStr = endpointStr;
    return this;
  }

   /**
   * Get endpointStr
   * @return endpointStr
  **/
  @Schema(description = "")
  public String getEndpointStr() {
    return endpointStr;
  }

  public void setEndpointStr(String endpointStr) {
    this.endpointStr = endpointStr;
  }

  public DBEndpointForDescribeDBEndpointOutput endpointType(EndpointTypeEnum endpointType) {
    this.endpointType = endpointType;
    return this;
  }

   /**
   * Get endpointType
   * @return endpointType
  **/
  @Schema(description = "")
  public EndpointTypeEnum getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(EndpointTypeEnum endpointType) {
    this.endpointType = endpointType;
  }

  public DBEndpointForDescribeDBEndpointOutput networkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * Get networkType
   * @return networkType
  **/
  @Schema(description = "")
  public NetworkTypeEnum getNetworkType() {
    return networkType;
  }

  public void setNetworkType(NetworkTypeEnum networkType) {
    this.networkType = networkType;
  }

  public DBEndpointForDescribeDBEndpointOutput objectId(String objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * Get objectId
   * @return objectId
  **/
  @Schema(description = "")
  public String getObjectId() {
    return objectId;
  }

  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }

  public DBEndpointForDescribeDBEndpointOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public DBEndpointForDescribeDBEndpointOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DBEndpointForDescribeDBEndpointOutput dbEndpointForDescribeDBEndpointOutput = (DBEndpointForDescribeDBEndpointOutput) o;
    return Objects.equals(this.dbAddresses, dbEndpointForDescribeDBEndpointOutput.dbAddresses) &&
        Objects.equals(this.endpointId, dbEndpointForDescribeDBEndpointOutput.endpointId) &&
        Objects.equals(this.endpointStr, dbEndpointForDescribeDBEndpointOutput.endpointStr) &&
        Objects.equals(this.endpointType, dbEndpointForDescribeDBEndpointOutput.endpointType) &&
        Objects.equals(this.networkType, dbEndpointForDescribeDBEndpointOutput.networkType) &&
        Objects.equals(this.objectId, dbEndpointForDescribeDBEndpointOutput.objectId) &&
        Objects.equals(this.subnetId, dbEndpointForDescribeDBEndpointOutput.subnetId) &&
        Objects.equals(this.vpcId, dbEndpointForDescribeDBEndpointOutput.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbAddresses, endpointId, endpointStr, endpointType, networkType, objectId, subnetId, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DBEndpointForDescribeDBEndpointOutput {\n");
    
    sb.append("    dbAddresses: ").append(toIndentedString(dbAddresses)).append("\n");
    sb.append("    endpointId: ").append(toIndentedString(endpointId)).append("\n");
    sb.append("    endpointStr: ").append(toIndentedString(endpointStr)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
