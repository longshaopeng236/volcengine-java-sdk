/*
 * mongodb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mongodb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mongodb.model.InstanceParameterForDescribeDBInstanceParametersOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDBInstanceParametersResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-10T12:08:21.110021+08:00[Asia/Shanghai]")
public class DescribeDBInstanceParametersResponse {
  @SerializedName("DBEngine")
  private String dbEngine = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceParameters")
  private List<InstanceParameterForDescribeDBInstanceParametersOutput> instanceParameters = null;

  @SerializedName("Total")
  private String total = null;

  public DescribeDBInstanceParametersResponse dbEngine(String dbEngine) {
    this.dbEngine = dbEngine;
    return this;
  }

   /**
   * Get dbEngine
   * @return dbEngine
  **/
  @Schema(description = "")
  public String getDbEngine() {
    return dbEngine;
  }

  public void setDbEngine(String dbEngine) {
    this.dbEngine = dbEngine;
  }

  public DescribeDBInstanceParametersResponse dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public DescribeDBInstanceParametersResponse instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeDBInstanceParametersResponse instanceParameters(List<InstanceParameterForDescribeDBInstanceParametersOutput> instanceParameters) {
    this.instanceParameters = instanceParameters;
    return this;
  }

  public DescribeDBInstanceParametersResponse addInstanceParametersItem(InstanceParameterForDescribeDBInstanceParametersOutput instanceParametersItem) {
    if (this.instanceParameters == null) {
      this.instanceParameters = new ArrayList<InstanceParameterForDescribeDBInstanceParametersOutput>();
    }
    this.instanceParameters.add(instanceParametersItem);
    return this;
  }

   /**
   * Get instanceParameters
   * @return instanceParameters
  **/
  @Valid
  @Schema(description = "")
  public List<InstanceParameterForDescribeDBInstanceParametersOutput> getInstanceParameters() {
    return instanceParameters;
  }

  public void setInstanceParameters(List<InstanceParameterForDescribeDBInstanceParametersOutput> instanceParameters) {
    this.instanceParameters = instanceParameters;
  }

  public DescribeDBInstanceParametersResponse total(String total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public String getTotal() {
    return total;
  }

  public void setTotal(String total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDBInstanceParametersResponse describeDBInstanceParametersResponse = (DescribeDBInstanceParametersResponse) o;
    return Objects.equals(this.dbEngine, describeDBInstanceParametersResponse.dbEngine) &&
        Objects.equals(this.dbEngineVersion, describeDBInstanceParametersResponse.dbEngineVersion) &&
        Objects.equals(this.instanceId, describeDBInstanceParametersResponse.instanceId) &&
        Objects.equals(this.instanceParameters, describeDBInstanceParametersResponse.instanceParameters) &&
        Objects.equals(this.total, describeDBInstanceParametersResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbEngine, dbEngineVersion, instanceId, instanceParameters, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDBInstanceParametersResponse {\n");
    
    sb.append("    dbEngine: ").append(toIndentedString(dbEngine)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceParameters: ").append(toIndentedString(instanceParameters)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
