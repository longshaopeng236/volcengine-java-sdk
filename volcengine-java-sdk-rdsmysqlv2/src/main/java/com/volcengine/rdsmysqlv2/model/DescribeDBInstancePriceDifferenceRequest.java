/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.NodeInfoForDescribeDBInstancePriceDifferenceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDBInstancePriceDifferenceRequest
 */


public class DescribeDBInstancePriceDifferenceRequest {
  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("InstanceIds")
  private List<String> instanceIds = null;

  @SerializedName("ModifyType")
  private String modifyType = null;

  @SerializedName("NodeInfo")
  private List<NodeInfoForDescribeDBInstancePriceDifferenceInput> nodeInfo = null;

  @SerializedName("Number")
  private Integer number = null;

  @SerializedName("Period")
  private Integer period = null;

  @SerializedName("PeriodUnit")
  private String periodUnit = null;

  @SerializedName("RollbackTime")
  private String rollbackTime = null;

  @SerializedName("ShardNumber")
  private Integer shardNumber = null;

  @SerializedName("StorageSpace")
  private Integer storageSpace = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("UserAction")
  private String userAction = null;

  public DescribeDBInstancePriceDifferenceRequest chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public DescribeDBInstancePriceDifferenceRequest instanceIds(List<String> instanceIds) {
    this.instanceIds = instanceIds;
    return this;
  }

  public DescribeDBInstancePriceDifferenceRequest addInstanceIdsItem(String instanceIdsItem) {
    if (this.instanceIds == null) {
      this.instanceIds = new ArrayList<String>();
    }
    this.instanceIds.add(instanceIdsItem);
    return this;
  }

   /**
   * Get instanceIds
   * @return instanceIds
  **/
  @Schema(description = "")
  public List<String> getInstanceIds() {
    return instanceIds;
  }

  public void setInstanceIds(List<String> instanceIds) {
    this.instanceIds = instanceIds;
  }

  public DescribeDBInstancePriceDifferenceRequest modifyType(String modifyType) {
    this.modifyType = modifyType;
    return this;
  }

   /**
   * Get modifyType
   * @return modifyType
  **/
  @Schema(description = "")
  public String getModifyType() {
    return modifyType;
  }

  public void setModifyType(String modifyType) {
    this.modifyType = modifyType;
  }

  public DescribeDBInstancePriceDifferenceRequest nodeInfo(List<NodeInfoForDescribeDBInstancePriceDifferenceInput> nodeInfo) {
    this.nodeInfo = nodeInfo;
    return this;
  }

  public DescribeDBInstancePriceDifferenceRequest addNodeInfoItem(NodeInfoForDescribeDBInstancePriceDifferenceInput nodeInfoItem) {
    if (this.nodeInfo == null) {
      this.nodeInfo = new ArrayList<NodeInfoForDescribeDBInstancePriceDifferenceInput>();
    }
    this.nodeInfo.add(nodeInfoItem);
    return this;
  }

   /**
   * Get nodeInfo
   * @return nodeInfo
  **/
  @Valid
  @Schema(description = "")
  public List<NodeInfoForDescribeDBInstancePriceDifferenceInput> getNodeInfo() {
    return nodeInfo;
  }

  public void setNodeInfo(List<NodeInfoForDescribeDBInstancePriceDifferenceInput> nodeInfo) {
    this.nodeInfo = nodeInfo;
  }

  public DescribeDBInstancePriceDifferenceRequest number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(description = "")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public DescribeDBInstancePriceDifferenceRequest period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public DescribeDBInstancePriceDifferenceRequest periodUnit(String periodUnit) {
    this.periodUnit = periodUnit;
    return this;
  }

   /**
   * Get periodUnit
   * @return periodUnit
  **/
  @Schema(description = "")
  public String getPeriodUnit() {
    return periodUnit;
  }

  public void setPeriodUnit(String periodUnit) {
    this.periodUnit = periodUnit;
  }

  public DescribeDBInstancePriceDifferenceRequest rollbackTime(String rollbackTime) {
    this.rollbackTime = rollbackTime;
    return this;
  }

   /**
   * Get rollbackTime
   * @return rollbackTime
  **/
  @Schema(description = "")
  public String getRollbackTime() {
    return rollbackTime;
  }

  public void setRollbackTime(String rollbackTime) {
    this.rollbackTime = rollbackTime;
  }

  public DescribeDBInstancePriceDifferenceRequest shardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
    return this;
  }

   /**
   * Get shardNumber
   * @return shardNumber
  **/
  @Schema(description = "")
  public Integer getShardNumber() {
    return shardNumber;
  }

  public void setShardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
  }

  public DescribeDBInstancePriceDifferenceRequest storageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Integer getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
  }

  public DescribeDBInstancePriceDifferenceRequest storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public DescribeDBInstancePriceDifferenceRequest userAction(String userAction) {
    this.userAction = userAction;
    return this;
  }

   /**
   * Get userAction
   * @return userAction
  **/
  @Schema(description = "")
  public String getUserAction() {
    return userAction;
  }

  public void setUserAction(String userAction) {
    this.userAction = userAction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDBInstancePriceDifferenceRequest describeDBInstancePriceDifferenceRequest = (DescribeDBInstancePriceDifferenceRequest) o;
    return Objects.equals(this.chargeType, describeDBInstancePriceDifferenceRequest.chargeType) &&
        Objects.equals(this.instanceIds, describeDBInstancePriceDifferenceRequest.instanceIds) &&
        Objects.equals(this.modifyType, describeDBInstancePriceDifferenceRequest.modifyType) &&
        Objects.equals(this.nodeInfo, describeDBInstancePriceDifferenceRequest.nodeInfo) &&
        Objects.equals(this.number, describeDBInstancePriceDifferenceRequest.number) &&
        Objects.equals(this.period, describeDBInstancePriceDifferenceRequest.period) &&
        Objects.equals(this.periodUnit, describeDBInstancePriceDifferenceRequest.periodUnit) &&
        Objects.equals(this.rollbackTime, describeDBInstancePriceDifferenceRequest.rollbackTime) &&
        Objects.equals(this.shardNumber, describeDBInstancePriceDifferenceRequest.shardNumber) &&
        Objects.equals(this.storageSpace, describeDBInstancePriceDifferenceRequest.storageSpace) &&
        Objects.equals(this.storageType, describeDBInstancePriceDifferenceRequest.storageType) &&
        Objects.equals(this.userAction, describeDBInstancePriceDifferenceRequest.userAction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeType, instanceIds, modifyType, nodeInfo, number, period, periodUnit, rollbackTime, shardNumber, storageSpace, storageType, userAction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDBInstancePriceDifferenceRequest {\n");
    
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    instanceIds: ").append(toIndentedString(instanceIds)).append("\n");
    sb.append("    modifyType: ").append(toIndentedString(modifyType)).append("\n");
    sb.append("    nodeInfo: ").append(toIndentedString(nodeInfo)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodUnit: ").append(toIndentedString(periodUnit)).append("\n");
    sb.append("    rollbackTime: ").append(toIndentedString(rollbackTime)).append("\n");
    sb.append("    shardNumber: ").append(toIndentedString(shardNumber)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    userAction: ").append(toIndentedString(userAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
