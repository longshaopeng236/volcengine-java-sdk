/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ModifyDBProxyConfigRequest
 */


public class ModifyDBProxyConfigRequest {
  @SerializedName("ConnectionPoolType")
  private String connectionPoolType = null;

  @SerializedName("DialTimeout")
  private String dialTimeout = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("MaxConnections")
  private Long maxConnections = null;

  @SerializedName("MaxFrontConnections")
  private Long maxFrontConnections = null;

  @SerializedName("MaxIdleConnections")
  private Long maxIdleConnections = null;

  @SerializedName("MaxQPS")
  private Long maxQPS = null;

  @SerializedName("MinIdleConnections")
  private Long minIdleConnections = null;

  @SerializedName("PingIntervalSeconds")
  private Long pingIntervalSeconds = null;

  @SerializedName("ReadOnly")
  private Boolean readOnly = null;

  @SerializedName("ReadTimeout")
  private String readTimeout = null;

  @SerializedName("SQLRules")
  private List<String> sqLRules = null;

  @SerializedName("WriteTimeout")
  private String writeTimeout = null;

  public ModifyDBProxyConfigRequest connectionPoolType(String connectionPoolType) {
    this.connectionPoolType = connectionPoolType;
    return this;
  }

   /**
   * Get connectionPoolType
   * @return connectionPoolType
  **/
  @Schema(description = "")
  public String getConnectionPoolType() {
    return connectionPoolType;
  }

  public void setConnectionPoolType(String connectionPoolType) {
    this.connectionPoolType = connectionPoolType;
  }

  public ModifyDBProxyConfigRequest dialTimeout(String dialTimeout) {
    this.dialTimeout = dialTimeout;
    return this;
  }

   /**
   * Get dialTimeout
   * @return dialTimeout
  **/
  @Schema(description = "")
  public String getDialTimeout() {
    return dialTimeout;
  }

  public void setDialTimeout(String dialTimeout) {
    this.dialTimeout = dialTimeout;
  }

  public ModifyDBProxyConfigRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public ModifyDBProxyConfigRequest maxConnections(Long maxConnections) {
    this.maxConnections = maxConnections;
    return this;
  }

   /**
   * Get maxConnections
   * @return maxConnections
  **/
  @Schema(description = "")
  public Long getMaxConnections() {
    return maxConnections;
  }

  public void setMaxConnections(Long maxConnections) {
    this.maxConnections = maxConnections;
  }

  public ModifyDBProxyConfigRequest maxFrontConnections(Long maxFrontConnections) {
    this.maxFrontConnections = maxFrontConnections;
    return this;
  }

   /**
   * Get maxFrontConnections
   * @return maxFrontConnections
  **/
  @Schema(description = "")
  public Long getMaxFrontConnections() {
    return maxFrontConnections;
  }

  public void setMaxFrontConnections(Long maxFrontConnections) {
    this.maxFrontConnections = maxFrontConnections;
  }

  public ModifyDBProxyConfigRequest maxIdleConnections(Long maxIdleConnections) {
    this.maxIdleConnections = maxIdleConnections;
    return this;
  }

   /**
   * Get maxIdleConnections
   * @return maxIdleConnections
  **/
  @Schema(description = "")
  public Long getMaxIdleConnections() {
    return maxIdleConnections;
  }

  public void setMaxIdleConnections(Long maxIdleConnections) {
    this.maxIdleConnections = maxIdleConnections;
  }

  public ModifyDBProxyConfigRequest maxQPS(Long maxQPS) {
    this.maxQPS = maxQPS;
    return this;
  }

   /**
   * Get maxQPS
   * @return maxQPS
  **/
  @Schema(description = "")
  public Long getMaxQPS() {
    return maxQPS;
  }

  public void setMaxQPS(Long maxQPS) {
    this.maxQPS = maxQPS;
  }

  public ModifyDBProxyConfigRequest minIdleConnections(Long minIdleConnections) {
    this.minIdleConnections = minIdleConnections;
    return this;
  }

   /**
   * Get minIdleConnections
   * @return minIdleConnections
  **/
  @Schema(description = "")
  public Long getMinIdleConnections() {
    return minIdleConnections;
  }

  public void setMinIdleConnections(Long minIdleConnections) {
    this.minIdleConnections = minIdleConnections;
  }

  public ModifyDBProxyConfigRequest pingIntervalSeconds(Long pingIntervalSeconds) {
    this.pingIntervalSeconds = pingIntervalSeconds;
    return this;
  }

   /**
   * Get pingIntervalSeconds
   * @return pingIntervalSeconds
  **/
  @Schema(description = "")
  public Long getPingIntervalSeconds() {
    return pingIntervalSeconds;
  }

  public void setPingIntervalSeconds(Long pingIntervalSeconds) {
    this.pingIntervalSeconds = pingIntervalSeconds;
  }

  public ModifyDBProxyConfigRequest readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Get readOnly
   * @return readOnly
  **/
  @Schema(description = "")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public ModifyDBProxyConfigRequest readTimeout(String readTimeout) {
    this.readTimeout = readTimeout;
    return this;
  }

   /**
   * Get readTimeout
   * @return readTimeout
  **/
  @Schema(description = "")
  public String getReadTimeout() {
    return readTimeout;
  }

  public void setReadTimeout(String readTimeout) {
    this.readTimeout = readTimeout;
  }

  public ModifyDBProxyConfigRequest sqLRules(List<String> sqLRules) {
    this.sqLRules = sqLRules;
    return this;
  }

  public ModifyDBProxyConfigRequest addSqLRulesItem(String sqLRulesItem) {
    if (this.sqLRules == null) {
      this.sqLRules = new ArrayList<String>();
    }
    this.sqLRules.add(sqLRulesItem);
    return this;
  }

   /**
   * Get sqLRules
   * @return sqLRules
  **/
  @Schema(description = "")
  public List<String> getSqLRules() {
    return sqLRules;
  }

  public void setSqLRules(List<String> sqLRules) {
    this.sqLRules = sqLRules;
  }

  public ModifyDBProxyConfigRequest writeTimeout(String writeTimeout) {
    this.writeTimeout = writeTimeout;
    return this;
  }

   /**
   * Get writeTimeout
   * @return writeTimeout
  **/
  @Schema(description = "")
  public String getWriteTimeout() {
    return writeTimeout;
  }

  public void setWriteTimeout(String writeTimeout) {
    this.writeTimeout = writeTimeout;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyDBProxyConfigRequest modifyDBProxyConfigRequest = (ModifyDBProxyConfigRequest) o;
    return Objects.equals(this.connectionPoolType, modifyDBProxyConfigRequest.connectionPoolType) &&
        Objects.equals(this.dialTimeout, modifyDBProxyConfigRequest.dialTimeout) &&
        Objects.equals(this.instanceId, modifyDBProxyConfigRequest.instanceId) &&
        Objects.equals(this.maxConnections, modifyDBProxyConfigRequest.maxConnections) &&
        Objects.equals(this.maxFrontConnections, modifyDBProxyConfigRequest.maxFrontConnections) &&
        Objects.equals(this.maxIdleConnections, modifyDBProxyConfigRequest.maxIdleConnections) &&
        Objects.equals(this.maxQPS, modifyDBProxyConfigRequest.maxQPS) &&
        Objects.equals(this.minIdleConnections, modifyDBProxyConfigRequest.minIdleConnections) &&
        Objects.equals(this.pingIntervalSeconds, modifyDBProxyConfigRequest.pingIntervalSeconds) &&
        Objects.equals(this.readOnly, modifyDBProxyConfigRequest.readOnly) &&
        Objects.equals(this.readTimeout, modifyDBProxyConfigRequest.readTimeout) &&
        Objects.equals(this.sqLRules, modifyDBProxyConfigRequest.sqLRules) &&
        Objects.equals(this.writeTimeout, modifyDBProxyConfigRequest.writeTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connectionPoolType, dialTimeout, instanceId, maxConnections, maxFrontConnections, maxIdleConnections, maxQPS, minIdleConnections, pingIntervalSeconds, readOnly, readTimeout, sqLRules, writeTimeout);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyDBProxyConfigRequest {\n");
    
    sb.append("    connectionPoolType: ").append(toIndentedString(connectionPoolType)).append("\n");
    sb.append("    dialTimeout: ").append(toIndentedString(dialTimeout)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    maxConnections: ").append(toIndentedString(maxConnections)).append("\n");
    sb.append("    maxFrontConnections: ").append(toIndentedString(maxFrontConnections)).append("\n");
    sb.append("    maxIdleConnections: ").append(toIndentedString(maxIdleConnections)).append("\n");
    sb.append("    maxQPS: ").append(toIndentedString(maxQPS)).append("\n");
    sb.append("    minIdleConnections: ").append(toIndentedString(minIdleConnections)).append("\n");
    sb.append("    pingIntervalSeconds: ").append(toIndentedString(pingIntervalSeconds)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    readTimeout: ").append(toIndentedString(readTimeout)).append("\n");
    sb.append("    sqLRules: ").append(toIndentedString(sqLRules)).append("\n");
    sb.append("    writeTimeout: ").append(toIndentedString(writeTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
