/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PreSchedulePlanForModifyDBInstanceSpecOutput
 */


public class PreSchedulePlanForModifyDBInstanceSpecOutput {
  @SerializedName("AccountSupportMigration")
  private Boolean accountSupportMigration = null;

  @SerializedName("ChooseMigrationCondition")
  private String chooseMigrationCondition = null;

  @SerializedName("ChooseMigrationFinally")
  private Boolean chooseMigrationFinally = null;

  @SerializedName("InstanceSupportMigration")
  private Boolean instanceSupportMigration = null;

  @SerializedName("RebuildMasterCount")
  private Integer rebuildMasterCount = null;

  @SerializedName("RebuildReadOnlyCount")
  private Integer rebuildReadOnlyCount = null;

  @SerializedName("RebuildSlaveCount")
  private Integer rebuildSlaveCount = null;

  @SerializedName("ResourceSupportMigration")
  private Boolean resourceSupportMigration = null;

  @SerializedName("SwitchType")
  private String switchType = null;

  @SerializedName("TryChooseMigrationBySwitchTypeAndCondition")
  private Boolean tryChooseMigrationBySwitchTypeAndCondition = null;

  @SerializedName("TryChooseMigrationError")
  private String tryChooseMigrationError = null;

  public PreSchedulePlanForModifyDBInstanceSpecOutput accountSupportMigration(Boolean accountSupportMigration) {
    this.accountSupportMigration = accountSupportMigration;
    return this;
  }

   /**
   * Get accountSupportMigration
   * @return accountSupportMigration
  **/
  @Schema(description = "")
  public Boolean isAccountSupportMigration() {
    return accountSupportMigration;
  }

  public void setAccountSupportMigration(Boolean accountSupportMigration) {
    this.accountSupportMigration = accountSupportMigration;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput chooseMigrationCondition(String chooseMigrationCondition) {
    this.chooseMigrationCondition = chooseMigrationCondition;
    return this;
  }

   /**
   * Get chooseMigrationCondition
   * @return chooseMigrationCondition
  **/
  @Schema(description = "")
  public String getChooseMigrationCondition() {
    return chooseMigrationCondition;
  }

  public void setChooseMigrationCondition(String chooseMigrationCondition) {
    this.chooseMigrationCondition = chooseMigrationCondition;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput chooseMigrationFinally(Boolean chooseMigrationFinally) {
    this.chooseMigrationFinally = chooseMigrationFinally;
    return this;
  }

   /**
   * Get chooseMigrationFinally
   * @return chooseMigrationFinally
  **/
  @Schema(description = "")
  public Boolean isChooseMigrationFinally() {
    return chooseMigrationFinally;
  }

  public void setChooseMigrationFinally(Boolean chooseMigrationFinally) {
    this.chooseMigrationFinally = chooseMigrationFinally;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput instanceSupportMigration(Boolean instanceSupportMigration) {
    this.instanceSupportMigration = instanceSupportMigration;
    return this;
  }

   /**
   * Get instanceSupportMigration
   * @return instanceSupportMigration
  **/
  @Schema(description = "")
  public Boolean isInstanceSupportMigration() {
    return instanceSupportMigration;
  }

  public void setInstanceSupportMigration(Boolean instanceSupportMigration) {
    this.instanceSupportMigration = instanceSupportMigration;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput rebuildMasterCount(Integer rebuildMasterCount) {
    this.rebuildMasterCount = rebuildMasterCount;
    return this;
  }

   /**
   * Get rebuildMasterCount
   * @return rebuildMasterCount
  **/
  @Schema(description = "")
  public Integer getRebuildMasterCount() {
    return rebuildMasterCount;
  }

  public void setRebuildMasterCount(Integer rebuildMasterCount) {
    this.rebuildMasterCount = rebuildMasterCount;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput rebuildReadOnlyCount(Integer rebuildReadOnlyCount) {
    this.rebuildReadOnlyCount = rebuildReadOnlyCount;
    return this;
  }

   /**
   * Get rebuildReadOnlyCount
   * @return rebuildReadOnlyCount
  **/
  @Schema(description = "")
  public Integer getRebuildReadOnlyCount() {
    return rebuildReadOnlyCount;
  }

  public void setRebuildReadOnlyCount(Integer rebuildReadOnlyCount) {
    this.rebuildReadOnlyCount = rebuildReadOnlyCount;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput rebuildSlaveCount(Integer rebuildSlaveCount) {
    this.rebuildSlaveCount = rebuildSlaveCount;
    return this;
  }

   /**
   * Get rebuildSlaveCount
   * @return rebuildSlaveCount
  **/
  @Schema(description = "")
  public Integer getRebuildSlaveCount() {
    return rebuildSlaveCount;
  }

  public void setRebuildSlaveCount(Integer rebuildSlaveCount) {
    this.rebuildSlaveCount = rebuildSlaveCount;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput resourceSupportMigration(Boolean resourceSupportMigration) {
    this.resourceSupportMigration = resourceSupportMigration;
    return this;
  }

   /**
   * Get resourceSupportMigration
   * @return resourceSupportMigration
  **/
  @Schema(description = "")
  public Boolean isResourceSupportMigration() {
    return resourceSupportMigration;
  }

  public void setResourceSupportMigration(Boolean resourceSupportMigration) {
    this.resourceSupportMigration = resourceSupportMigration;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput switchType(String switchType) {
    this.switchType = switchType;
    return this;
  }

   /**
   * Get switchType
   * @return switchType
  **/
  @Schema(description = "")
  public String getSwitchType() {
    return switchType;
  }

  public void setSwitchType(String switchType) {
    this.switchType = switchType;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput tryChooseMigrationBySwitchTypeAndCondition(Boolean tryChooseMigrationBySwitchTypeAndCondition) {
    this.tryChooseMigrationBySwitchTypeAndCondition = tryChooseMigrationBySwitchTypeAndCondition;
    return this;
  }

   /**
   * Get tryChooseMigrationBySwitchTypeAndCondition
   * @return tryChooseMigrationBySwitchTypeAndCondition
  **/
  @Schema(description = "")
  public Boolean isTryChooseMigrationBySwitchTypeAndCondition() {
    return tryChooseMigrationBySwitchTypeAndCondition;
  }

  public void setTryChooseMigrationBySwitchTypeAndCondition(Boolean tryChooseMigrationBySwitchTypeAndCondition) {
    this.tryChooseMigrationBySwitchTypeAndCondition = tryChooseMigrationBySwitchTypeAndCondition;
  }

  public PreSchedulePlanForModifyDBInstanceSpecOutput tryChooseMigrationError(String tryChooseMigrationError) {
    this.tryChooseMigrationError = tryChooseMigrationError;
    return this;
  }

   /**
   * Get tryChooseMigrationError
   * @return tryChooseMigrationError
  **/
  @Schema(description = "")
  public String getTryChooseMigrationError() {
    return tryChooseMigrationError;
  }

  public void setTryChooseMigrationError(String tryChooseMigrationError) {
    this.tryChooseMigrationError = tryChooseMigrationError;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PreSchedulePlanForModifyDBInstanceSpecOutput preSchedulePlanForModifyDBInstanceSpecOutput = (PreSchedulePlanForModifyDBInstanceSpecOutput) o;
    return Objects.equals(this.accountSupportMigration, preSchedulePlanForModifyDBInstanceSpecOutput.accountSupportMigration) &&
        Objects.equals(this.chooseMigrationCondition, preSchedulePlanForModifyDBInstanceSpecOutput.chooseMigrationCondition) &&
        Objects.equals(this.chooseMigrationFinally, preSchedulePlanForModifyDBInstanceSpecOutput.chooseMigrationFinally) &&
        Objects.equals(this.instanceSupportMigration, preSchedulePlanForModifyDBInstanceSpecOutput.instanceSupportMigration) &&
        Objects.equals(this.rebuildMasterCount, preSchedulePlanForModifyDBInstanceSpecOutput.rebuildMasterCount) &&
        Objects.equals(this.rebuildReadOnlyCount, preSchedulePlanForModifyDBInstanceSpecOutput.rebuildReadOnlyCount) &&
        Objects.equals(this.rebuildSlaveCount, preSchedulePlanForModifyDBInstanceSpecOutput.rebuildSlaveCount) &&
        Objects.equals(this.resourceSupportMigration, preSchedulePlanForModifyDBInstanceSpecOutput.resourceSupportMigration) &&
        Objects.equals(this.switchType, preSchedulePlanForModifyDBInstanceSpecOutput.switchType) &&
        Objects.equals(this.tryChooseMigrationBySwitchTypeAndCondition, preSchedulePlanForModifyDBInstanceSpecOutput.tryChooseMigrationBySwitchTypeAndCondition) &&
        Objects.equals(this.tryChooseMigrationError, preSchedulePlanForModifyDBInstanceSpecOutput.tryChooseMigrationError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSupportMigration, chooseMigrationCondition, chooseMigrationFinally, instanceSupportMigration, rebuildMasterCount, rebuildReadOnlyCount, rebuildSlaveCount, resourceSupportMigration, switchType, tryChooseMigrationBySwitchTypeAndCondition, tryChooseMigrationError);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PreSchedulePlanForModifyDBInstanceSpecOutput {\n");
    
    sb.append("    accountSupportMigration: ").append(toIndentedString(accountSupportMigration)).append("\n");
    sb.append("    chooseMigrationCondition: ").append(toIndentedString(chooseMigrationCondition)).append("\n");
    sb.append("    chooseMigrationFinally: ").append(toIndentedString(chooseMigrationFinally)).append("\n");
    sb.append("    instanceSupportMigration: ").append(toIndentedString(instanceSupportMigration)).append("\n");
    sb.append("    rebuildMasterCount: ").append(toIndentedString(rebuildMasterCount)).append("\n");
    sb.append("    rebuildReadOnlyCount: ").append(toIndentedString(rebuildReadOnlyCount)).append("\n");
    sb.append("    rebuildSlaveCount: ").append(toIndentedString(rebuildSlaveCount)).append("\n");
    sb.append("    resourceSupportMigration: ").append(toIndentedString(resourceSupportMigration)).append("\n");
    sb.append("    switchType: ").append(toIndentedString(switchType)).append("\n");
    sb.append("    tryChooseMigrationBySwitchTypeAndCondition: ").append(toIndentedString(tryChooseMigrationBySwitchTypeAndCondition)).append("\n");
    sb.append("    tryChooseMigrationError: ").append(toIndentedString(tryChooseMigrationError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
