/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeEventsRequest
 */


public class DescribeEventsRequest {
  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("EventAction")
  private String eventAction = null;

  @SerializedName("EventResult")
  private String eventResult = null;

  @SerializedName("EventSource")
  private String eventSource = null;

  @SerializedName("EventType")
  private String eventType = null;

  @SerializedName("FinishEndTime")
  private String finishEndTime = null;

  @SerializedName("FinishStartTime")
  private String finishStartTime = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("StartTime")
  private String startTime = null;

  public DescribeEventsRequest endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public DescribeEventsRequest eventAction(String eventAction) {
    this.eventAction = eventAction;
    return this;
  }

   /**
   * Get eventAction
   * @return eventAction
  **/
  @Schema(description = "")
  public String getEventAction() {
    return eventAction;
  }

  public void setEventAction(String eventAction) {
    this.eventAction = eventAction;
  }

  public DescribeEventsRequest eventResult(String eventResult) {
    this.eventResult = eventResult;
    return this;
  }

   /**
   * Get eventResult
   * @return eventResult
  **/
  @Schema(description = "")
  public String getEventResult() {
    return eventResult;
  }

  public void setEventResult(String eventResult) {
    this.eventResult = eventResult;
  }

  public DescribeEventsRequest eventSource(String eventSource) {
    this.eventSource = eventSource;
    return this;
  }

   /**
   * Get eventSource
   * @return eventSource
  **/
  @Schema(description = "")
  public String getEventSource() {
    return eventSource;
  }

  public void setEventSource(String eventSource) {
    this.eventSource = eventSource;
  }

  public DescribeEventsRequest eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(description = "")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public DescribeEventsRequest finishEndTime(String finishEndTime) {
    this.finishEndTime = finishEndTime;
    return this;
  }

   /**
   * Get finishEndTime
   * @return finishEndTime
  **/
  @Schema(description = "")
  public String getFinishEndTime() {
    return finishEndTime;
  }

  public void setFinishEndTime(String finishEndTime) {
    this.finishEndTime = finishEndTime;
  }

  public DescribeEventsRequest finishStartTime(String finishStartTime) {
    this.finishStartTime = finishStartTime;
    return this;
  }

   /**
   * Get finishStartTime
   * @return finishStartTime
  **/
  @Schema(description = "")
  public String getFinishStartTime() {
    return finishStartTime;
  }

  public void setFinishStartTime(String finishStartTime) {
    this.finishStartTime = finishStartTime;
  }

  public DescribeEventsRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeEventsRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public DescribeEventsRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public DescribeEventsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeEventsRequest startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeEventsRequest describeEventsRequest = (DescribeEventsRequest) o;
    return Objects.equals(this.endTime, describeEventsRequest.endTime) &&
        Objects.equals(this.eventAction, describeEventsRequest.eventAction) &&
        Objects.equals(this.eventResult, describeEventsRequest.eventResult) &&
        Objects.equals(this.eventSource, describeEventsRequest.eventSource) &&
        Objects.equals(this.eventType, describeEventsRequest.eventType) &&
        Objects.equals(this.finishEndTime, describeEventsRequest.finishEndTime) &&
        Objects.equals(this.finishStartTime, describeEventsRequest.finishStartTime) &&
        Objects.equals(this.instanceId, describeEventsRequest.instanceId) &&
        Objects.equals(this.limit, describeEventsRequest.limit) &&
        Objects.equals(this.offset, describeEventsRequest.offset) &&
        Objects.equals(this.projectName, describeEventsRequest.projectName) &&
        Objects.equals(this.startTime, describeEventsRequest.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, eventAction, eventResult, eventSource, eventType, finishEndTime, finishStartTime, instanceId, limit, offset, projectName, startTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeEventsRequest {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    eventAction: ").append(toIndentedString(eventAction)).append("\n");
    sb.append("    eventResult: ").append(toIndentedString(eventResult)).append("\n");
    sb.append("    eventSource: ").append(toIndentedString(eventSource)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    finishEndTime: ").append(toIndentedString(finishEndTime)).append("\n");
    sb.append("    finishStartTime: ").append(toIndentedString(finishStartTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
