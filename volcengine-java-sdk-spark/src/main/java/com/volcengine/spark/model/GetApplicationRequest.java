/*
 * spark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.spark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetApplicationRequest
 */


public class GetApplicationRequest {
  @SerializedName("ApplicationName")
  private String applicationName = null;

  @SerializedName("ApplicationTrn")
  private Long applicationTrn = null;

  @SerializedName("PageNum")
  private Integer pageNum = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("SortFiled")
  private String sortFiled = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("State")
  private String state = null;

  public GetApplicationRequest applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @Schema(description = "")
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public GetApplicationRequest applicationTrn(Long applicationTrn) {
    this.applicationTrn = applicationTrn;
    return this;
  }

   /**
   * Get applicationTrn
   * @return applicationTrn
  **/
  @Schema(description = "")
  public Long getApplicationTrn() {
    return applicationTrn;
  }

  public void setApplicationTrn(Long applicationTrn) {
    this.applicationTrn = applicationTrn;
  }

  public GetApplicationRequest pageNum(Integer pageNum) {
    this.pageNum = pageNum;
    return this;
  }

   /**
   * Get pageNum
   * @return pageNum
  **/
  @Schema(description = "")
  public Integer getPageNum() {
    return pageNum;
  }

  public void setPageNum(Integer pageNum) {
    this.pageNum = pageNum;
  }

  public GetApplicationRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public GetApplicationRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public GetApplicationRequest sortFiled(String sortFiled) {
    this.sortFiled = sortFiled;
    return this;
  }

   /**
   * Get sortFiled
   * @return sortFiled
  **/
  @Schema(description = "")
  public String getSortFiled() {
    return sortFiled;
  }

  public void setSortFiled(String sortFiled) {
    this.sortFiled = sortFiled;
  }

  public GetApplicationRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @Schema(description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public GetApplicationRequest state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetApplicationRequest getApplicationRequest = (GetApplicationRequest) o;
    return Objects.equals(this.applicationName, getApplicationRequest.applicationName) &&
        Objects.equals(this.applicationTrn, getApplicationRequest.applicationTrn) &&
        Objects.equals(this.pageNum, getApplicationRequest.pageNum) &&
        Objects.equals(this.pageSize, getApplicationRequest.pageSize) &&
        Objects.equals(this.projectId, getApplicationRequest.projectId) &&
        Objects.equals(this.sortFiled, getApplicationRequest.sortFiled) &&
        Objects.equals(this.sortOrder, getApplicationRequest.sortOrder) &&
        Objects.equals(this.state, getApplicationRequest.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationName, applicationTrn, pageNum, pageSize, projectId, sortFiled, sortOrder, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetApplicationRequest {\n");
    
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    applicationTrn: ").append(toIndentedString(applicationTrn)).append("\n");
    sb.append("    pageNum: ").append(toIndentedString(pageNum)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    sortFiled: ").append(toIndentedString(sortFiled)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
